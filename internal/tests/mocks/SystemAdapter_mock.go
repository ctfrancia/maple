// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package mocks

import (
	"github.com/ctfrancia/maple/internal/core/domain"
	mock "github.com/stretchr/testify/mock"
)

// NewMockSystemAdapter creates a new instance of MockSystemAdapter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSystemAdapter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSystemAdapter {
	mock := &MockSystemAdapter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockSystemAdapter is an autogenerated mock type for the SystemAdapter type
type MockSystemAdapter struct {
	mock.Mock
}

type MockSystemAdapter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockSystemAdapter) EXPECT() *MockSystemAdapter_Expecter {
	return &MockSystemAdapter_Expecter{mock: &_m.Mock}
}

// GetSystemInfo provides a mock function for the type MockSystemAdapter
func (_mock *MockSystemAdapter) GetSystemInfo() domain.System {
	ret := _mock.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetSystemInfo")
	}

	var r0 domain.System
	if returnFunc, ok := ret.Get(0).(func() domain.System); ok {
		r0 = returnFunc()
	} else {
		r0 = ret.Get(0).(domain.System)
	}
	return r0
}

// MockSystemAdapter_GetSystemInfo_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetSystemInfo'
type MockSystemAdapter_GetSystemInfo_Call struct {
	*mock.Call
}

// GetSystemInfo is a helper method to define mock.On call
func (_e *MockSystemAdapter_Expecter) GetSystemInfo() *MockSystemAdapter_GetSystemInfo_Call {
	return &MockSystemAdapter_GetSystemInfo_Call{Call: _e.mock.On("GetSystemInfo")}
}

func (_c *MockSystemAdapter_GetSystemInfo_Call) Run(run func()) *MockSystemAdapter_GetSystemInfo_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSystemAdapter_GetSystemInfo_Call) Return(system domain.System) *MockSystemAdapter_GetSystemInfo_Call {
	_c.Call.Return(system)
	return _c
}

func (_c *MockSystemAdapter_GetSystemInfo_Call) RunAndReturn(run func() domain.System) *MockSystemAdapter_GetSystemInfo_Call {
	_c.Call.Return(run)
	return _c
}
